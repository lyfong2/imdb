{"version":3,"sources":["components/elements/Header/Header.js","config.js","components/elements/HeroImage/HeroImage.js","components/elements/SearchBar/SearchBar.js","components/elements/FourColGrid/FourColGrid.js","components/elements/MovieThumb/MovieThumb.js","components/elements/LoadMoreBtn/LoadMoreBtn.js","components/elements/Spinner/Spinner.js","components/Home/Home.js","components/elements/Navigation/Navigation.js","components/elements/MovieInfo/MovieInfo.js","helpers.js","components/elements/MovieInfoBar/MovieInfoBar.js","components/elements/Actor/Actor.js","components/Movie/Movie.js","components/elements/NotFound/NotFound.js","components/App/App.js","index.js"],"names":["Header","className","to","src","alt","API_URL","API_KEY","IMAGE_BASE_URL","BACKDROP_SIZE","POSTER_SIZE","HeroImage","props","style","background","image","title","text","SearchBar","state","value","timeout","doSearch","event","setState","target","clearTimeout","setTimeout","callback","name","size","type","placeholder","onChange","this","Component","FourColGrid","header","loading","children","map","element","i","MovieThumb","movieId","movieName","clickable","pathname","LoadMoreBtn","onClick","Spinner","Home","movies","heroImage","currentPage","totalPages","searchTerm","searchItems","endpoint","fetchItems","loadMoreItems","fetch","then","result","json","results","page","total_pages","sessionStorage","setItem","JSON","stringify","catch","error","console","localStorage","getItem","parse","backdrop_path","original_title","overview","poster_path","id","Navigation","movie","MovieInfo","min","max","optimum","low","high","vote_average","directors","length","calcTime","time","hours","Math","floor","mins","convertMoney","money","Intl","NumberFormat","currency","minimumFractionDigits","format","MovieInfoBar","budget","revenue","Actor","actor","profile_path","character","Movie","actors","a","match","params","status_code","creditsEndpoint","creditsResult","crew","filter","member","job","cast","log","location","runtime","NotFound","App","basename","Fragment","path","component","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0e1ed85e.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Header.css';\r\n\r\n\r\nconst Header = () => {\r\n    return(\r\n        <div className=\"rmdb-header\">\r\n            <div className=\"rmdb-header-content\">\r\n                <Link to=\"/\">\r\n                    <img className=\"rmdb-logo\" src=\"/public/images/reactMovie_logo.png\" alt=\"rmdb-logo\" />\r\n                </Link>\r\n                <img className=\"rmdb-tmdb-logo\" src=\"/images/tmdb_logo.png\" alt=\"tmdb-logo\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","// Configuration for TMDB\r\n// To se the latest configuration fetch it from https://api.themoviedb.org/3/configuration?api_key=019e8f375549e0bbd4a4191862ebc88f\r\n\r\nconst API_URL = 'https://api.themoviedb.org/3/';\r\nconst API_KEY = '844dba0bfd8f3a4f3799f6130ef9e335';\r\n\r\n// Images\r\n// An image URL looks like this example:\r\n// http://image.tmdb.org/t/p/w780/bOGkgRGdhrBYJSLpXaxhXVstddV.jpg\r\n\r\nconst IMAGE_BASE_URL ='http://image.tmdb.org/t/p/';\r\n\r\n//Sizes: w300, w780, w1280, original\r\nconst BACKDROP_SIZE = 'w1280';\r\n\r\n// w92, w154, w185, w342, w500, w780, original\r\nconst POSTER_SIZE = 'w500';\r\n\r\nexport {\r\n  API_URL,\r\n  API_KEY,\r\n  IMAGE_BASE_URL,\r\n  BACKDROP_SIZE,\r\n  POSTER_SIZE\r\n}","import React from 'react';\r\nimport './HeroImage.css';\r\n\r\n\r\nconst HeroImage = (props) => {\r\n    return(\r\n        <div className=\"rmdb-heroimage\"\r\n            style={{\r\n                background:\r\n                `linear-gradient(to bottom, rgba(0,0,0,0)\r\n                 39%,rgba(0,0,0,0)\r\n                 41%,rgba(0,0,0,0.65)\r\n                 100%),\r\n                 url('${props.image}'), #1c1c1c`\r\n            }}\r\n        >\r\n            <div className=\"rmdb-heroimage-content\">\r\n                <div className=\"rmdb-heroimage-text\">\r\n                    <h1>{props.title}</h1>\r\n                    <p>{props.text}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HeroImage;","import React, {Component} from 'react';\r\nimport FontAwesome from 'react-fontawesome';\r\nimport './SearchBar.css';\r\n\r\n\r\nclass SearchBar extends Component {\r\n    state = {\r\n        value: ''\r\n    }\r\n    timeout = null;\r\n    \r\n    doSearch = (event) =>{\r\n        this.setState({ value : event.target.value })\r\n        clearTimeout(this.timeout);\r\n\r\n        this.timeout = setTimeout(() => {\r\n            this.props.callback(this.state.value);\r\n        }, 500);\r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <div className=\"rmdb-searchbar\">\r\n                <div className=\"rmdb-searchbar-content\">\r\n                    <FontAwesome className=\"rmdb-fa-search\" name=\"search\" size=\"2x\" />\r\n                    <input \r\n                        type=\"text\"\r\n                        className=\"rmdb-searchbar-input\"\r\n                        placeholder=\"Search\"\r\n                        onChange={this.doSearch}\r\n                        value={this.state.value}\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchBar;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './FourColGrid.css';\r\n\r\nconst FourColGrid = (props) => {\r\n    const renderElements = () => {\r\n        const gridElements = props.children.map((element, i)=>{\r\n            return(\r\n                <div key={i} className=\"rmdb-grid-element\">\r\n                    {element}\r\n                </div>\r\n            )\r\n        })\r\n        return gridElements;\r\n    }\r\n    return (\r\n        <div className=\"rmdb-grid\">\r\n            {props.header && !props.loading ? <h1>{props.header}</h1>: null}\r\n            <div className=\"rmdb-grid-content\">\r\n                {renderElements()}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nFourColGrid.propTypes = {\r\n    header: PropTypes.string,\r\n    loading: PropTypes.bool\r\n}\r\n\r\nexport default FourColGrid;\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport './MovieThumb.css';\r\n\r\nconst MovieThumb = ({image, movieId, movieName, clickable}) => {\r\n    return(\r\n        <div className=\"rmdb-moviethumb\">\r\n            {clickable ?\r\n                // 兩個{{裡面放js語法}}\r\n                <Link to={{ pathname: `/${movieId}`, movieName: `${movieName}` }}>                    \r\n                    <img src={image} alt=\"moviethumb\" />\r\n                </Link>\r\n                :\r\n                <img src={image} alt=\"moviethumb\" />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nMovieThumb.propTypes = {\r\n    image: PropTypes.string,\r\n    movieId: PropTypes.number,\r\n    movieName: PropTypes.string\r\n}\r\n\r\nexport default MovieThumb;","import React from 'react';\r\nimport './LoadMoreBtn.css';\r\n\r\nconst LoadMoreBtn = (props) => {\r\n    return(\r\n        <div className=\"rmdb-loadmorebtn\" onClick={props.onClick}>\r\n            <p>{props.text}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoadMoreBtn;","import React from 'react';\r\nimport './Spinner.css';\r\n\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className=\"loader\"></div>\r\n    )\r\n}\r\n\r\nexport default Spinner;","import React, {Component} from 'react';\r\nimport { API_URL, API_KEY, IMAGE_BASE_URL, BACKDROP_SIZE, POSTER_SIZE } from '../../config';\r\nimport HeroImage from '../elements/HeroImage/HeroImage';\r\nimport SearchBar from '../elements/SearchBar/SearchBar';\r\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\r\nimport MovieThumb from '../elements/MovieThumb/MovieThumb';\r\nimport LoadMoreBtn from '../elements/LoadMoreBtn/LoadMoreBtn';\r\nimport Spinner from '../elements/Spinner/Spinner';\r\nimport './Home.css';\r\n\r\n//statefull component\r\nclass Home extends Component{\r\n    state = {\r\n        movies: [],\r\n        heroImage: null,\r\n        loading: false,\r\n        currentPage: 0,\r\n        totalPages: 0,\r\n        searchTerm: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(localStorage.getItem('HomeState')){\r\n            const state = JSON.parse(localStorage.getItem('HomeState'));\r\n            this.setState({...state});\r\n        }else{\r\n            this.setState({ loading: true });  \r\n            const endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\r\n            this.fetchItems(endpoint);      \r\n        }\r\n    }\r\n    \r\n    searchItems = (searchTerm) => {\r\n        let endpoint = '';\r\n        this.setState({\r\n            movies: [],\r\n            loading: true,\r\n            searchTerm\r\n        })\r\n        if(searchTerm === ''){\r\n            endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\r\n        } else {\r\n            endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${searchTerm}`;\r\n        }        \r\n        this.fetchItems(endpoint);\r\n    }\r\n\r\n    loadMoreItems = () => {\r\n        // ES6 Destructuring the state\r\n        const { searchTerm, currentPage } = this.state;\r\n    \r\n        let endpoint = '';\r\n        this.setState({ loading: true })\r\n    \r\n        if (searchTerm === '') {\r\n          endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=${currentPage + 1}`;\r\n        } else {\r\n          endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${searchTerm}&page=${currentPage + 1}`;\r\n        }\r\n        this.fetchItems(endpoint);\r\n    }\r\n\r\n    fetchItems = (endpoint) => {\r\n        // ES6 Destructuring the state\r\n        const { movies, heroImage, searchTerm } = this.state;\r\n    \r\n        fetch(endpoint)\r\n        .then(result => result.json())\r\n        .then(result => {\r\n          this.setState({\r\n            movies: [...movies, ...result.results],\r\n            heroImage: heroImage || result.results[0],\r\n            loading: false,\r\n            currentPage: result.page,\r\n            totalPages: result.total_pages\r\n          }, () => {\r\n            // Remember state for the next mount if we´re not in a search view\r\n            if (searchTerm === \"\") {\r\n              sessionStorage.setItem('HomeState', JSON.stringify(this.state));\r\n            }\r\n          })\r\n        })\r\n        .catch(error => console.error('Error:', error))\r\n      }\r\n\r\n\r\n\r\n    render() {\r\n        // ES6 destructuring the state\r\n        const {movies, heroImage, loading, currentPage, totalPages, searchTerm } = this.state;\r\n        \r\n        return(            \r\n            <div className=\"rmdb-home\">\r\n                {/* 因為去api取資料是要等畫面render後才執行, 沒有包這層了話有null的資料會出錯 */}\r\n                {heroImage ? \r\n                    <div>\r\n                        <HeroImage \r\n                            image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${heroImage.backdrop_path}`}\r\n                            title={heroImage.original_title}\r\n                            text={heroImage.overview}\r\n                        />\r\n                        <SearchBar callback={this.searchItems}/>\r\n                    </div> \r\n                    : null\r\n                }\r\n                \r\n                <div className =\"rmdb-home-grid\">\r\n                    <FourColGrid \r\n                        header={searchTerm ? 'Search Result' : 'Popular Movies'}\r\n                        loading={loading}\r\n                    >                        \r\n                        {movies.map((element, i) => {\r\n                            return <MovieThumb\r\n                                        key={i}\r\n                                        clickable={true}\r\n                                        image={element.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${element.poster_path}`: '../../../public/images/no_image.jpg'}\r\n                                        movieId={element.id}\r\n                                        movieName={element.original_title}\r\n                                    />\r\n                        })}\r\n                    </FourColGrid>\r\n                    {loading ? <Spinner /> : null}\r\n                    {(currentPage <= totalPages && !loading) ? \r\n                        <LoadMoreBtn text=\"Load More\" onClick={this.loadMoreItems}/>\r\n                        : null\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Navigation.css';\r\n\r\n\r\nconst Navigation = (props) => {\r\n    return(\r\n        <div className=\"rmdb-navigation\">\r\n            <div className=\"rmdb-navigation-content\">\r\n                <Link to=\"/\">\r\n                    <p>Home</p>\r\n                </Link>\r\n                <p></p>\r\n                <p>{props.movie}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport { IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE } from '../../../config';\r\nimport FontAwesom from 'react-fontawesome';\r\nimport MovieThumb from '../MovieThumb/MovieThumb';\r\nimport './MovieInfo.css';\r\n\r\n\r\nconst MovieInfo = (props) => {\r\n    return(\r\n        <div className=\"rmdb-movieinfo\"\r\n            style={{\r\n                background: props.movie.backdrop_path \r\n                ? `url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${props.movie.backdrop_path}')` \r\n                : '#000'\r\n            }}\r\n        >   \r\n            <div className=\"rmdb-movieinfo-content\">\r\n                <div className=\"rmdb-movieinfo-thumb\">                    \r\n                    <MovieThumb\r\n                        image={props.movie.poster_path\r\n                            ? `${IMAGE_BASE_URL}${POSTER_SIZE}${props.movie.poster_path}` \r\n                            : './images/no_image.jpg'}\r\n                        clickable={false}\r\n                    />\r\n                </div>\r\n                <div className=\"rmdb-movieinfo-text\">\r\n                    <h1>{props.movie.title}</h1>\r\n                    <h3>PLOT</h3>\r\n                    <p>{props.movie.overview}</p>\r\n                    <h3>IMDB RATING</h3>\r\n                    <div className=\"rmdb-rating\">\r\n                        {/* 進度條 */}\r\n                        <meter min=\"0\" max=\"100\" optimum=\"100\" low=\"40\" high=\"70\" value={props.movie.vote_average * 10}></meter>\r\n                        <p className=\"rmdb-score\">{props.movie.vote_average}</p>\r\n                    </div>\r\n                    {props.directors.length > 1 ? <h3>DIRECTORS</h3>: <h3>DIRECTOR</h3>}\r\n                    {props.directors.map((element, i) => {\r\n                        return <p key={i} className=\"rmdb-director\">{element.name}</p>\r\n                    })}                    \r\n                </div>\r\n                <FontAwesom className=\"fa-film\" name=\"film\" size=\"5x\" />                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieInfo;","// Comvert time to hours and minutes\r\nexport const calcTime = (time) => {\r\n    const hours = Math.floor(time / 60);\r\n    const mins = time % 60;\r\n    return `${hours}h ${mins}m`;\r\n}\r\n\r\n// Convert a number to $ format\r\nexport const convertMoney = (money) => {\r\n    var formatter = new Intl.NumberFormat('en-US', {\r\n        style: 'currency',\r\n        currency: 'USD',\r\n        minimumFractionDigits: 0\r\n    });\r\n    return formatter.format(money);\r\n}","import React from 'react';\r\nimport FontAwesome from 'react-fontawesome';\r\nimport { calcTime, convertMoney } from '../../../helpers';\r\nimport './MovieInfoBar.css';\r\n\r\nconst MovieInfoBar = (props) => (    \r\n    <div className=\"rmdb-movieinfobar\">\r\n        <div className=\"rmdb-movieinfobar-content\">\r\n            <div className=\"rmdb-movieinfobar-content-col\">\r\n                <FontAwesome className=\"fa-time\" name=\"clock-o\" size=\"2x\" />\r\n                <span className=\"rmdb-movieinfobar-info\">Running time: {calcTime(props.time)}</span>\r\n            </div>\r\n            <div className=\"rmdb-movieinfobar-content-col\">\r\n                <FontAwesome className=\"fa-budget\" name=\"money\" size=\"2x\" />\r\n                <span className=\"rmdb-movieinfobar-info\">Budget: {convertMoney(props.budget)}</span>                    \r\n            </div>\r\n            <div className=\"rmdb-movieinfobar-content-col\">\r\n                <FontAwesome className=\"fa-revenue\" name=\"ticket\" size=\"2x\" />\r\n                <span className=\"rmdb-movieinfobar-info\">Revenue: {convertMoney(props.revenue)}</span>\r\n            </div>\r\n        </div>\r\n    </div>   \r\n)\r\n\r\nexport default MovieInfoBar;","import React from 'react';\r\nimport { IMAGE_BASE_URL } from '../../../config';\r\nimport './Actor.css';\r\n\r\nconst Actor = (props) => {\r\n    const POSTER_SIZE = \"w154\";\r\n\r\n    return(\r\n        <div className=\"rmdb-actor\">\r\n            <img\r\n                src={props.actor.profile_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${props.actor.profile_path}` : './images/no_image.jpg'}\r\n                alt=\"actorthumb\"\r\n            />\r\n            <span className=\"rmdb-actor-name\">{props.actor.name}</span>\r\n            <span className=\"rmdb-actor-character\">{props.actor.character}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Actor;\r\n","import React, { Component } from 'react';\r\nimport { API_URL, API_KEY } from '../../config';\r\nimport Navigation from '../elements/Navigation/Navigation';\r\nimport MovieInfo from '../elements/MovieInfo/MovieInfo';\r\nimport MovieInfoBar from '../elements/MovieInfoBar/MovieInfoBar';\r\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\r\nimport Actor from '../elements/Actor/Actor';\r\nimport Spinner from '../elements/Spinner/Spinner';\r\nimport './Movie.css';\r\n\r\nclass Movie extends Component {\r\n    state = {\r\n        movie: null,\r\n        actors: null,\r\n        directors: [],\r\n        loading: false\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n        if(localStorage.getItem(`${this.props.match.params.movieId}`)){\r\n            const state = JSON.parse(localStorage.getItem(`${this.props.match.params.movieId}`));\r\n            this.setState({...state});\r\n        } else {\r\n            this.setState({loading: true})\r\n            // First fetch the movie ...\r\n            const endpoint = `${API_URL}movie/${this.props.match.params.movieId}?api_key=${API_KEY}&language=en-US`;\r\n            console.log(endpoint);\r\n            this.fetchItems(endpoint);\r\n        }\r\n    }\r\n\r\n    fetchItems = async endpoint => {\r\n        const { movieId } = this.props.match.params;\r\n        try {\r\n            let result =  await(await fetch(endpoint)).json();\r\n                if(result.status_code){ // 導到 not found page\r\n                    this.setState({loading: false});\r\n                } else {\r\n                    this.setState({ movie: result })\r\n                    const creditsEndpoint = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\r\n                    const creditsResult =  await(await fetch(creditsEndpoint)).json();\r\n                    const directors = creditsResult.crew.filter((member) => member.job === \"Director\");      \r\n                    this.setState({\r\n                        actors: result.cast,\r\n                        directors,\r\n                        loading: false\r\n                    }, () => {\r\n                        localStorage.setItem(`${movieId}`, JSON.stringify(this.state));\r\n                    })\r\n                };\r\n            }catch(e) {\r\n                console.log(\"There was an error: \" + e);\r\n            }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"rmdb-movie\">\r\n                {this.state.movie ?\r\n                    <div>\r\n                        <Navigation movie={this.props.location.movieName}/>\r\n                        <MovieInfo movie={this.state.movie} directors={this.state.directors} />\r\n                        <MovieInfoBar time={this.state.movie.runtime} budget={this.state.movie.budget} revenue={this.state.movie.revenue} />\r\n                    </div>\r\n                    : null\r\n                }\r\n                {/* {console.log(\"actors=\"+this.state.actors)} */}\r\n                {this.state.actors ?\r\n                    <div className=\"rmdb-movie-grid\">\r\n                        <FourColGrid header={'Actors'}>                            \r\n                            {this.state.actors.map((element, i) => {\r\n                                return <Actor key={i} actor={element} />\r\n                            })}\r\n                        </FourColGrid>\r\n                    </div> \r\n                    : null }                    \r\n                {!this.state.actors && !this.state.loading ? <h1>No Movie Found!</h1> : null}\r\n                {this.state.loading ? <Spinner/> : null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Movie;","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n    return(\r\n        <div>\r\n            <h1>Whoops. This page doesn't exist</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport {HashRouter, Route, Switch} from 'react-router-dom';\r\nimport Header from '../elements/Header/Header';\r\nimport Home from '../Home/Home';\r\nimport Movie from  '../Movie/Movie';\r\nimport NotFound from '../elements/NotFound/NotFound';\r\n\r\nconst App = ()=>{\r\n    return(\r\n        <HashRouter basename=\"/react_rmdb/\">\r\n            <React.Fragment>\r\n                <Header />\r\n                <Switch>\r\n                    <Route path=\"/\" component={Home} exact />\r\n                    <Route path=\"/:movieId\" component={Movie} exact />\r\n                    <Route component={NotFound} />\r\n                </Switch>\r\n            </React.Fragment>\r\n        </HashRouter>\r\n    )\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n// import App from './App';\n\nReactDOM.render(\n  <App />, document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}